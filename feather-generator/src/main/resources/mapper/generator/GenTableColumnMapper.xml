<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feather.generator.mapper.GenTableColumnMapper">
    
    <resultMap type="GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createByid"     column="create_byid"    />
        <result property="createTime"     column="create_time"    jdbcType="BIGINT"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateByid"     column="update_byid"    />
        <result property="updateTime"     column="update_time"    jdbcType="BIGINT"    />
    </resultMap>
	
	<sql id="selectGenTableColumnVo">
        select column_id, table_id, column_name, column_comment, column_type, java_type, java_field, is_pk, is_increment, is_required, is_insert, is_edit, is_list, is_query, query_type, html_type, dict_type, sort, create_by, create_time, update_by, update_time from gen_table_column
    </sql>
	
    <select id="selectGenTableColumnListByTableId" parameterType="GenTableColumn" resultMap="GenTableColumnResult">
        <include refid="selectGenTableColumnVo"/>
        where table_id = #{tableId}
        order by sort
    </select>
    
    
    <!-- [BEGIN] selectDbTableColumnsByName -->
    <select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="postgresql">
		SELECT A.column_name, 
		       CASE A.is_nullable WHEN 'NO' THEN null ELSE 1 END AS is_required, 
		       CASE WHEN length(B.attname) > 0 THEN 1 ELSE 0 END AS is_pk, 
		       A.ordinal_position AS sort,
		       B.column_comment,
                  CASE WHEN position('nextval' in column_default) > 0 THEN 1 ELSE 0 END AS is_increment, 
		       A.data_type AS column_type
		  FROM information_schema.columns A
		  LEFT JOIN (
		    SELECT pg_attribute.attname,
		           col_description(pg_attribute.attrelid,pg_attribute.attnum) as column_comment,
                      pg_attribute.attnum,
                      pg_index.indkey
		      FROM pg_index, pg_class, pg_attribute
		     WHERE pg_class.oid = #{tableName} :: regclass
		       AND pg_index.indrelid = pg_class.oid
		       AND pg_attribute.attrelid = pg_class.oid
		  ) B ON A.column_name = B.attname
		 WHERE A.table_name = #{tableName}
		 order by A.ordinal_position
	</select>
	
	<select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="mysql">
		select column_name, 
		       (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then 1 else null end) as is_required, 
		       (case when column_key = 'PRI' then 1 else 0 end) as is_pk, 
		       ordinal_position as sort, 
		       column_comment, 
		       (case when extra = 'auto_increment' then 1 else 0 end) as is_increment, 
		       column_type
		from information_schema.columns where table_schema = (select database()) and table_name = (#{tableName})
		order by ordinal_position
	</select>
	
	<select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="oracle">
		select c.column_name, 
		       (case when nullable = 'NO' then 1 else null end) as is_required, 
		       (case when t.column_name is not null then 1 else 0 end) as is_pk, 
		       column_id as sort, 
		       (select comments from user_col_comments where table_name = c.table_name and column_name = c.column_name) as column_comment, 
		       0 as is_increment, 
		       data_type as column_type
		from user_tab_columns c
		left join(
		    select col.column_name
                 from user_constraints con
                 join user_cons_columns col on con.constraint_name = col.constraint_name
                where con.constraint_type='P'
                 and col.table_name = #{tableName}
		) t on c.column_name = t.column_name
		where c.table_name = #{tableName}
		order by column_id
	</select>
	
	<select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="sqlserver">
		SELECT a.name as column_name,
		       case when a.isnullable=1 then 0 else 1 end as is_required,
		       case when exists(SELECT 1 FROM sysobjects where xtype='PK' and name in (
		                            SELECT name FROM sysindexes WHERE indid in(
		                                SELECT indid FROM sysindexkeys WHERE id = a.id AND colid=a.colid
		                            )
		                        )
		       ) then 1 else 0 end as is_pk,
		isnull(g.[value],'') as column_comment,
		a.colorder as sort,
		case when COLUMNPROPERTY(a.id,a.name,'IsIdentity')=1 then 1 else 0 end as is_increment,
		b.name as column_type
		FROM syscolumns a
		left join systypes b on a.xusertype=b.xusertype
		inner join sysobjects d on a.id=d.id and d.xtype='U'
		left join syscomments e on a.cdefault=e.id
		left join sys.extended_properties g on a.id=g.major_id and a.colid=g.minor_id
		left join sys.extended_properties f on d.id=f.major_id and f.minor_id=0
		where d.name = #{tableName}
		order by a.id,a.colorder
	</select>
    <!-- [END] selectDbTableColumnsByName -->
    
    
    <insert id="insertGenTableColumn" parameterType="GenTableColumn">
        insert into gen_table_column
        <trim prefix="(" suffix=")" suffixOverrides=",">
        	column_id,
			<if test="tableId != null and tableId != ''">table_id,</if>
			<if test="columnName != null and columnName != ''">column_name,</if>
			<if test="columnComment != null and columnComment != ''">column_comment,</if>
			<if test="columnType != null and columnType != ''">column_type,</if>
			<if test="javaType != null and javaType != ''">java_type,</if>
			<if test="javaField != null  and javaField != ''">java_field,</if>
			<if test="isPk != null and isPk != ''">is_pk,</if>
			<if test="isIncrement != null and isIncrement != ''">is_increment,</if>
			<if test="isRequired != null and isRequired != ''">is_required,</if>
			<if test="isInsert != null and isInsert != ''">is_insert,</if>
			<if test="isEdit != null and isEdit != ''">is_edit,</if>
			<if test="isList != null and isList != ''">is_list,</if>
			<if test="isQuery != null and isQuery != ''">is_query,</if>
			<if test="queryType != null and queryType != ''">query_type,</if>
			<if test="htmlType != null and htmlType != ''">html_type,</if>
			<if test="dictType != null and dictType != ''">dict_type,</if>
			<if test="sort != null">sort,</if>
			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="createByid != null">create_byid,</if>
			<if test="createTime != null">create_time,</if>
			<if test="updateBy != null and updateBy != ''">update_by,</if>
			<if test="updateByid != null">update_byid,</if>
			<if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
         	#{columnId},
			<if test="tableId != null and tableId != ''">#{tableId},</if>
			<if test="columnName != null and columnName != ''">#{columnName},</if>
			<if test="columnComment != null and columnComment != ''">#{columnComment},</if>
			<if test="columnType != null and columnType != ''">#{columnType},</if>
			<if test="javaType != null and javaType != ''">#{javaType},</if>
			<if test="javaField != null and javaField != ''">#{javaField},</if>
			<if test="isPk != null and isPk != ''">#{isPk},</if>
			<if test="isIncrement != null and isIncrement != ''">#{isIncrement},</if>
			<if test="isRequired != null and isRequired != ''">#{isRequired},</if>
			<if test="isInsert != null and isInsert != ''">#{isInsert},</if>
			<if test="isEdit != null and isEdit != ''">#{isEdit},</if>
			<if test="isList != null and isList != ''">#{isList},</if>
			<if test="isQuery != null and isQuery != ''">#{isQuery},</if>
			<if test="queryType != null and queryType != ''">#{queryType},</if>
			<if test="htmlType != null and htmlType != ''">#{htmlType},</if>
			<if test="dictType != null and dictType != ''">#{dictType},</if>
			<if test="sort != null">#{sort},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="createByid != null">#{createByid},</if>
			<if test="createTime != null">#{createTime, jdbcType=BIGINT},</if>
			<if test="updateBy != null and updateBy != ''">#{updateBy},</if>
			<if test="updateByid != null">#{updateByid},</if>
			<if test="updateTime != null">#{updateTime, jdbcType=BIGINT},</if>
        </trim>
    </insert>
	 
    <update id="updateGenTableColumn" parameterType="GenTableColumn">
        update gen_table_column
        <trim prefix="SET" suffixOverrides=",">
            column_comment = #{columnComment},
            java_type = #{javaType},
            java_field = #{javaField},
            is_insert = #{isInsert},
            is_edit = #{isEdit},
            is_list = #{isList},
            is_query = #{isQuery},
            is_required = #{isRequired},
            query_type = #{queryType},
            html_type = #{htmlType},
            dict_type = #{dictType},
            sort = #{sort},
            update_by = #{updateBy},
            update_byid = #{updateByid},
            update_time = #{updateTime, jdbcType=BIGINT}
        </trim>
        where column_id = #{columnId}
    </update>

    <delete id="deleteGenTableColumnByIds" parameterType="Long">
        delete from gen_table_column where table_id in 
        <foreach collection="array" item="tableId" open="(" separator="," close=")">
            #{tableId}
        </foreach>
    </delete>
    
</mapper>